SET ANSI_NULLS ON

GO


 

SET QUOTED_IDENTIFIER ON

GO

Drop table  [dbo].[A]

CREATE TABLE [dbo].[A](

       [dimension_1] [varchar](1) NOT NULL,

       [dimension_2] [varchar](1) NOT NULL,

       [dimension_3] [varchar](1) NOT NULL,

       [measure_1] [int] NOT NULL

) ON [PRIMARY]

GO

truncate table [dbo].[A]

INSERT INTO [dbo].[A]

           ([dimension_1]

           ,[dimension_2]

           ,[dimension_3]

           ,[measure_1])

     VALUES

           ('a','I','K',1),

                ('a','J','L',7),

                ('b','I','M',2),

                ('c','J','N',5)

Go


 

Drop table  [dbo].[B]

CREATE TABLE [dbo].[B](

       [dimension_1] [varchar](1) NOT NULL,

       [dimension_2] [varchar](1) NOT NULL,

       [measure_2] [int] NOT NULL

) ON [PRIMARY]

GO

truncate table [dbo].[B]

INSERT INTO [dbo].[B]

           ([dimension_1]

           ,[dimension_2]

           ,[measure_2])

     VALUES

           ('a','J',7),

                ('b','J',10),

                ('d','J',4)

Go

Drop table  [dbo].[MAP]

CREATE TABLE [dbo].[MAP](

       [dimension_1] [varchar](1) NOT NULL,

       [correct_dimension_2] [varchar](1) NOT NULL

) ON [PRIMARY]

GO

truncate table [dbo].[MAP]

INSERT INTO [dbo].[MAP]

           ([dimension_1]

           ,[correct_dimension_2])

          

     VALUES

           ('a','W'),

                ('a','W'),

                ('b','X'),

                ('c','Y'),

                ('b','X'),

                ('d','Z')

Go


 

UPDATE [dbo].[A]

   SET       A.[dimension_2] = dbo.MAP.[correct_dimension_2]

   from A join MAP on A.[dimension_1] = MAP.[dimension_1]

     

 --WHERE A.[dimension_2] = MAP.[correct_dimension_2]

GO


 

UPDATE [dbo].[B]

   SET       B.[dimension_2] = dbo.MAP.[correct_dimension_2]

   from B join MAP on B.[dimension_1] = MAP.[dimension_1]


 

GO


 

SELECT DISTINCT A.dimension_1, A.dimension_2,

case when A.measure_1 is null then 0 else A.measure_1 end as measure_1,

case when B.measure_2 is null then 0 else B.measure_2 end as measure_2

FROM            A LEFT OUTER JOIN

                         B ON A.dimension_1 = B.dimension_1

union


 

SELECT        B.dimension_1, B.dimension_2,

case when A.measure_1 is null then 0 else A.measure_1 end as measure_1,

case when B.measure_2 is null then 0 else B.measure_2 end as measure_2


 

FROM            A RIGHT OUTER JOIN

                         B ON A.dimension_1 = B.dimension_1
